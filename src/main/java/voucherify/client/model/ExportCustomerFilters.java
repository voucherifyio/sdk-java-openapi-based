/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import voucherify.client.model.FieldConditions;
import voucherify.client.model.Junction;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import voucherify.client.JSON;

/**
 * ExportCustomerFilters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-17T09:00:53.208514+01:00[Europe/Warsaw]")
public class ExportCustomerFilters {
  public static final String SERIALIZED_NAME_JUNCTION = "junction";
  @SerializedName(SERIALIZED_NAME_JUNCTION)
  private Junction junction;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private FieldConditions name;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private FieldConditions id;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private FieldConditions description;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private FieldConditions email;

  public static final String SERIALIZED_NAME_SOURCE_ID = "source_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private FieldConditions sourceId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private FieldConditions createdAt;

  public static final String SERIALIZED_NAME_ADDRESS_CITY = "address_city";
  @SerializedName(SERIALIZED_NAME_ADDRESS_CITY)
  private FieldConditions addressCity;

  public static final String SERIALIZED_NAME_ADDRESS_STATE = "address_state";
  @SerializedName(SERIALIZED_NAME_ADDRESS_STATE)
  private FieldConditions addressState;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "address_line_1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private FieldConditions addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "address_line_2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private FieldConditions addressLine2;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTRY = "address_country";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTRY)
  private FieldConditions addressCountry;

  public static final String SERIALIZED_NAME_ADDRESS_POSTAL_CODE = "address_postal_code";
  @SerializedName(SERIALIZED_NAME_ADDRESS_POSTAL_CODE)
  private FieldConditions addressPostalCode;

  public static final String SERIALIZED_NAME_REDEMPTIONS_TOTAL_REDEEMED = "redemptions_total_redeemed";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS_TOTAL_REDEEMED)
  private FieldConditions redemptionsTotalRedeemed;

  public static final String SERIALIZED_NAME_REDEMPTIONS_TOTAL_FAILED = "redemptions_total_failed";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS_TOTAL_FAILED)
  private FieldConditions redemptionsTotalFailed;

  public static final String SERIALIZED_NAME_REDEMPTIONS_TOTAL_SUCCEEDED = "redemptions_total_succeeded";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS_TOTAL_SUCCEEDED)
  private FieldConditions redemptionsTotalSucceeded;

  public static final String SERIALIZED_NAME_REDEMPTIONS_TOTAL_ROLLED_BACK = "redemptions_total_rolled_back";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS_TOTAL_ROLLED_BACK)
  private FieldConditions redemptionsTotalRolledBack;

  public static final String SERIALIZED_NAME_REDEMPTIONS_TOTAL_ROLLBACK_FAILED = "redemptions_total_rollback_failed";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS_TOTAL_ROLLBACK_FAILED)
  private FieldConditions redemptionsTotalRollbackFailed;

  public static final String SERIALIZED_NAME_REDEMPTIONS_TOTAL_ROLLBACK_SUCCEEDED = "redemptions_total_rollback_succeeded";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS_TOTAL_ROLLBACK_SUCCEEDED)
  private FieldConditions redemptionsTotalRollbackSucceeded;

  public static final String SERIALIZED_NAME_ORDERS_TOTAL_AMOUNT = "orders_total_amount";
  @SerializedName(SERIALIZED_NAME_ORDERS_TOTAL_AMOUNT)
  private FieldConditions ordersTotalAmount;

  public static final String SERIALIZED_NAME_ORDERS_TOTAL_COUNT = "orders_total_count";
  @SerializedName(SERIALIZED_NAME_ORDERS_TOTAL_COUNT)
  private FieldConditions ordersTotalCount;

  public static final String SERIALIZED_NAME_ORDERS_AVERAGE_AMOUNT = "orders_average_amount";
  @SerializedName(SERIALIZED_NAME_ORDERS_AVERAGE_AMOUNT)
  private FieldConditions ordersAverageAmount;

  public static final String SERIALIZED_NAME_ORDERS_LAST_ORDER_AMOUNT = "orders_last_order_amount";
  @SerializedName(SERIALIZED_NAME_ORDERS_LAST_ORDER_AMOUNT)
  private FieldConditions ordersLastOrderAmount;

  public static final String SERIALIZED_NAME_ORDERS_LAST_ORDER_DATE = "orders_last_order_date";
  @SerializedName(SERIALIZED_NAME_ORDERS_LAST_ORDER_DATE)
  private FieldConditions ordersLastOrderDate;

  public static final String SERIALIZED_NAME_LOYALTY_POINTS = "loyalty_points";
  @SerializedName(SERIALIZED_NAME_LOYALTY_POINTS)
  private FieldConditions loyaltyPoints;

  public static final String SERIALIZED_NAME_LOYALTY_REFERRED_CUSTOMERS = "loyalty_referred_customers";
  @SerializedName(SERIALIZED_NAME_LOYALTY_REFERRED_CUSTOMERS)
  private FieldConditions loyaltyReferredCustomers;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private FieldConditions updatedAt;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private FieldConditions phone;

  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  private FieldConditions birthday;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private FieldConditions metadata;

  public static final String SERIALIZED_NAME_BIRTHDATE = "birthdate";
  @SerializedName(SERIALIZED_NAME_BIRTHDATE)
  private FieldConditions birthdate;

  public ExportCustomerFilters() {
  }

  public ExportCustomerFilters junction(Junction junction) {
    
    this.junction = junction;
    return this;
  }

   /**
   * Get junction
   * @return junction
  **/
  @javax.annotation.Nullable
  public Junction getJunction() {
    return junction;
  }


  public void setJunction(Junction junction) {
    this.junction = junction;
  }


  public ExportCustomerFilters name(FieldConditions name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public FieldConditions getName() {
    return name;
  }


  public void setName(FieldConditions name) {
    this.name = name;
  }


  public ExportCustomerFilters id(FieldConditions id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public FieldConditions getId() {
    return id;
  }


  public void setId(FieldConditions id) {
    this.id = id;
  }


  public ExportCustomerFilters description(FieldConditions description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  public FieldConditions getDescription() {
    return description;
  }


  public void setDescription(FieldConditions description) {
    this.description = description;
  }


  public ExportCustomerFilters email(FieldConditions email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  public FieldConditions getEmail() {
    return email;
  }


  public void setEmail(FieldConditions email) {
    this.email = email;
  }


  public ExportCustomerFilters sourceId(FieldConditions sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @javax.annotation.Nullable
  public FieldConditions getSourceId() {
    return sourceId;
  }


  public void setSourceId(FieldConditions sourceId) {
    this.sourceId = sourceId;
  }


  public ExportCustomerFilters createdAt(FieldConditions createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public FieldConditions getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(FieldConditions createdAt) {
    this.createdAt = createdAt;
  }


  public ExportCustomerFilters addressCity(FieldConditions addressCity) {
    
    this.addressCity = addressCity;
    return this;
  }

   /**
   * Get addressCity
   * @return addressCity
  **/
  @javax.annotation.Nullable
  public FieldConditions getAddressCity() {
    return addressCity;
  }


  public void setAddressCity(FieldConditions addressCity) {
    this.addressCity = addressCity;
  }


  public ExportCustomerFilters addressState(FieldConditions addressState) {
    
    this.addressState = addressState;
    return this;
  }

   /**
   * Get addressState
   * @return addressState
  **/
  @javax.annotation.Nullable
  public FieldConditions getAddressState() {
    return addressState;
  }


  public void setAddressState(FieldConditions addressState) {
    this.addressState = addressState;
  }


  public ExportCustomerFilters addressLine1(FieldConditions addressLine1) {
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Get addressLine1
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  public FieldConditions getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(FieldConditions addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public ExportCustomerFilters addressLine2(FieldConditions addressLine2) {
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Get addressLine2
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  public FieldConditions getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(FieldConditions addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public ExportCustomerFilters addressCountry(FieldConditions addressCountry) {
    
    this.addressCountry = addressCountry;
    return this;
  }

   /**
   * Get addressCountry
   * @return addressCountry
  **/
  @javax.annotation.Nullable
  public FieldConditions getAddressCountry() {
    return addressCountry;
  }


  public void setAddressCountry(FieldConditions addressCountry) {
    this.addressCountry = addressCountry;
  }


  public ExportCustomerFilters addressPostalCode(FieldConditions addressPostalCode) {
    
    this.addressPostalCode = addressPostalCode;
    return this;
  }

   /**
   * Get addressPostalCode
   * @return addressPostalCode
  **/
  @javax.annotation.Nullable
  public FieldConditions getAddressPostalCode() {
    return addressPostalCode;
  }


  public void setAddressPostalCode(FieldConditions addressPostalCode) {
    this.addressPostalCode = addressPostalCode;
  }


  public ExportCustomerFilters redemptionsTotalRedeemed(FieldConditions redemptionsTotalRedeemed) {
    
    this.redemptionsTotalRedeemed = redemptionsTotalRedeemed;
    return this;
  }

   /**
   * Get redemptionsTotalRedeemed
   * @return redemptionsTotalRedeemed
  **/
  @javax.annotation.Nullable
  public FieldConditions getRedemptionsTotalRedeemed() {
    return redemptionsTotalRedeemed;
  }


  public void setRedemptionsTotalRedeemed(FieldConditions redemptionsTotalRedeemed) {
    this.redemptionsTotalRedeemed = redemptionsTotalRedeemed;
  }


  public ExportCustomerFilters redemptionsTotalFailed(FieldConditions redemptionsTotalFailed) {
    
    this.redemptionsTotalFailed = redemptionsTotalFailed;
    return this;
  }

   /**
   * Get redemptionsTotalFailed
   * @return redemptionsTotalFailed
  **/
  @javax.annotation.Nullable
  public FieldConditions getRedemptionsTotalFailed() {
    return redemptionsTotalFailed;
  }


  public void setRedemptionsTotalFailed(FieldConditions redemptionsTotalFailed) {
    this.redemptionsTotalFailed = redemptionsTotalFailed;
  }


  public ExportCustomerFilters redemptionsTotalSucceeded(FieldConditions redemptionsTotalSucceeded) {
    
    this.redemptionsTotalSucceeded = redemptionsTotalSucceeded;
    return this;
  }

   /**
   * Get redemptionsTotalSucceeded
   * @return redemptionsTotalSucceeded
  **/
  @javax.annotation.Nullable
  public FieldConditions getRedemptionsTotalSucceeded() {
    return redemptionsTotalSucceeded;
  }


  public void setRedemptionsTotalSucceeded(FieldConditions redemptionsTotalSucceeded) {
    this.redemptionsTotalSucceeded = redemptionsTotalSucceeded;
  }


  public ExportCustomerFilters redemptionsTotalRolledBack(FieldConditions redemptionsTotalRolledBack) {
    
    this.redemptionsTotalRolledBack = redemptionsTotalRolledBack;
    return this;
  }

   /**
   * Get redemptionsTotalRolledBack
   * @return redemptionsTotalRolledBack
  **/
  @javax.annotation.Nullable
  public FieldConditions getRedemptionsTotalRolledBack() {
    return redemptionsTotalRolledBack;
  }


  public void setRedemptionsTotalRolledBack(FieldConditions redemptionsTotalRolledBack) {
    this.redemptionsTotalRolledBack = redemptionsTotalRolledBack;
  }


  public ExportCustomerFilters redemptionsTotalRollbackFailed(FieldConditions redemptionsTotalRollbackFailed) {
    
    this.redemptionsTotalRollbackFailed = redemptionsTotalRollbackFailed;
    return this;
  }

   /**
   * Get redemptionsTotalRollbackFailed
   * @return redemptionsTotalRollbackFailed
  **/
  @javax.annotation.Nullable
  public FieldConditions getRedemptionsTotalRollbackFailed() {
    return redemptionsTotalRollbackFailed;
  }


  public void setRedemptionsTotalRollbackFailed(FieldConditions redemptionsTotalRollbackFailed) {
    this.redemptionsTotalRollbackFailed = redemptionsTotalRollbackFailed;
  }


  public ExportCustomerFilters redemptionsTotalRollbackSucceeded(FieldConditions redemptionsTotalRollbackSucceeded) {
    
    this.redemptionsTotalRollbackSucceeded = redemptionsTotalRollbackSucceeded;
    return this;
  }

   /**
   * Get redemptionsTotalRollbackSucceeded
   * @return redemptionsTotalRollbackSucceeded
  **/
  @javax.annotation.Nullable
  public FieldConditions getRedemptionsTotalRollbackSucceeded() {
    return redemptionsTotalRollbackSucceeded;
  }


  public void setRedemptionsTotalRollbackSucceeded(FieldConditions redemptionsTotalRollbackSucceeded) {
    this.redemptionsTotalRollbackSucceeded = redemptionsTotalRollbackSucceeded;
  }


  public ExportCustomerFilters ordersTotalAmount(FieldConditions ordersTotalAmount) {
    
    this.ordersTotalAmount = ordersTotalAmount;
    return this;
  }

   /**
   * Get ordersTotalAmount
   * @return ordersTotalAmount
  **/
  @javax.annotation.Nullable
  public FieldConditions getOrdersTotalAmount() {
    return ordersTotalAmount;
  }


  public void setOrdersTotalAmount(FieldConditions ordersTotalAmount) {
    this.ordersTotalAmount = ordersTotalAmount;
  }


  public ExportCustomerFilters ordersTotalCount(FieldConditions ordersTotalCount) {
    
    this.ordersTotalCount = ordersTotalCount;
    return this;
  }

   /**
   * Get ordersTotalCount
   * @return ordersTotalCount
  **/
  @javax.annotation.Nullable
  public FieldConditions getOrdersTotalCount() {
    return ordersTotalCount;
  }


  public void setOrdersTotalCount(FieldConditions ordersTotalCount) {
    this.ordersTotalCount = ordersTotalCount;
  }


  public ExportCustomerFilters ordersAverageAmount(FieldConditions ordersAverageAmount) {
    
    this.ordersAverageAmount = ordersAverageAmount;
    return this;
  }

   /**
   * Get ordersAverageAmount
   * @return ordersAverageAmount
  **/
  @javax.annotation.Nullable
  public FieldConditions getOrdersAverageAmount() {
    return ordersAverageAmount;
  }


  public void setOrdersAverageAmount(FieldConditions ordersAverageAmount) {
    this.ordersAverageAmount = ordersAverageAmount;
  }


  public ExportCustomerFilters ordersLastOrderAmount(FieldConditions ordersLastOrderAmount) {
    
    this.ordersLastOrderAmount = ordersLastOrderAmount;
    return this;
  }

   /**
   * Get ordersLastOrderAmount
   * @return ordersLastOrderAmount
  **/
  @javax.annotation.Nullable
  public FieldConditions getOrdersLastOrderAmount() {
    return ordersLastOrderAmount;
  }


  public void setOrdersLastOrderAmount(FieldConditions ordersLastOrderAmount) {
    this.ordersLastOrderAmount = ordersLastOrderAmount;
  }


  public ExportCustomerFilters ordersLastOrderDate(FieldConditions ordersLastOrderDate) {
    
    this.ordersLastOrderDate = ordersLastOrderDate;
    return this;
  }

   /**
   * Get ordersLastOrderDate
   * @return ordersLastOrderDate
  **/
  @javax.annotation.Nullable
  public FieldConditions getOrdersLastOrderDate() {
    return ordersLastOrderDate;
  }


  public void setOrdersLastOrderDate(FieldConditions ordersLastOrderDate) {
    this.ordersLastOrderDate = ordersLastOrderDate;
  }


  public ExportCustomerFilters loyaltyPoints(FieldConditions loyaltyPoints) {
    
    this.loyaltyPoints = loyaltyPoints;
    return this;
  }

   /**
   * Get loyaltyPoints
   * @return loyaltyPoints
  **/
  @javax.annotation.Nullable
  public FieldConditions getLoyaltyPoints() {
    return loyaltyPoints;
  }


  public void setLoyaltyPoints(FieldConditions loyaltyPoints) {
    this.loyaltyPoints = loyaltyPoints;
  }


  public ExportCustomerFilters loyaltyReferredCustomers(FieldConditions loyaltyReferredCustomers) {
    
    this.loyaltyReferredCustomers = loyaltyReferredCustomers;
    return this;
  }

   /**
   * Get loyaltyReferredCustomers
   * @return loyaltyReferredCustomers
  **/
  @javax.annotation.Nullable
  public FieldConditions getLoyaltyReferredCustomers() {
    return loyaltyReferredCustomers;
  }


  public void setLoyaltyReferredCustomers(FieldConditions loyaltyReferredCustomers) {
    this.loyaltyReferredCustomers = loyaltyReferredCustomers;
  }


  public ExportCustomerFilters updatedAt(FieldConditions updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  public FieldConditions getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(FieldConditions updatedAt) {
    this.updatedAt = updatedAt;
  }


  public ExportCustomerFilters phone(FieldConditions phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  public FieldConditions getPhone() {
    return phone;
  }


  public void setPhone(FieldConditions phone) {
    this.phone = phone;
  }


  public ExportCustomerFilters birthday(FieldConditions birthday) {
    
    this.birthday = birthday;
    return this;
  }

   /**
   * Get birthday
   * @return birthday
  **/
  @javax.annotation.Nullable
  public FieldConditions getBirthday() {
    return birthday;
  }


  public void setBirthday(FieldConditions birthday) {
    this.birthday = birthday;
  }


  public ExportCustomerFilters metadata(FieldConditions metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  public FieldConditions getMetadata() {
    return metadata;
  }


  public void setMetadata(FieldConditions metadata) {
    this.metadata = metadata;
  }


  public ExportCustomerFilters birthdate(FieldConditions birthdate) {
    
    this.birthdate = birthdate;
    return this;
  }

   /**
   * Get birthdate
   * @return birthdate
  **/
  @javax.annotation.Nullable
  public FieldConditions getBirthdate() {
    return birthdate;
  }


  public void setBirthdate(FieldConditions birthdate) {
    this.birthdate = birthdate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportCustomerFilters exportCustomerFilters = (ExportCustomerFilters) o;
    return Objects.equals(this.junction, exportCustomerFilters.junction) &&
        Objects.equals(this.name, exportCustomerFilters.name) &&
        Objects.equals(this.id, exportCustomerFilters.id) &&
        Objects.equals(this.description, exportCustomerFilters.description) &&
        Objects.equals(this.email, exportCustomerFilters.email) &&
        Objects.equals(this.sourceId, exportCustomerFilters.sourceId) &&
        Objects.equals(this.createdAt, exportCustomerFilters.createdAt) &&
        Objects.equals(this.addressCity, exportCustomerFilters.addressCity) &&
        Objects.equals(this.addressState, exportCustomerFilters.addressState) &&
        Objects.equals(this.addressLine1, exportCustomerFilters.addressLine1) &&
        Objects.equals(this.addressLine2, exportCustomerFilters.addressLine2) &&
        Objects.equals(this.addressCountry, exportCustomerFilters.addressCountry) &&
        Objects.equals(this.addressPostalCode, exportCustomerFilters.addressPostalCode) &&
        Objects.equals(this.redemptionsTotalRedeemed, exportCustomerFilters.redemptionsTotalRedeemed) &&
        Objects.equals(this.redemptionsTotalFailed, exportCustomerFilters.redemptionsTotalFailed) &&
        Objects.equals(this.redemptionsTotalSucceeded, exportCustomerFilters.redemptionsTotalSucceeded) &&
        Objects.equals(this.redemptionsTotalRolledBack, exportCustomerFilters.redemptionsTotalRolledBack) &&
        Objects.equals(this.redemptionsTotalRollbackFailed, exportCustomerFilters.redemptionsTotalRollbackFailed) &&
        Objects.equals(this.redemptionsTotalRollbackSucceeded, exportCustomerFilters.redemptionsTotalRollbackSucceeded) &&
        Objects.equals(this.ordersTotalAmount, exportCustomerFilters.ordersTotalAmount) &&
        Objects.equals(this.ordersTotalCount, exportCustomerFilters.ordersTotalCount) &&
        Objects.equals(this.ordersAverageAmount, exportCustomerFilters.ordersAverageAmount) &&
        Objects.equals(this.ordersLastOrderAmount, exportCustomerFilters.ordersLastOrderAmount) &&
        Objects.equals(this.ordersLastOrderDate, exportCustomerFilters.ordersLastOrderDate) &&
        Objects.equals(this.loyaltyPoints, exportCustomerFilters.loyaltyPoints) &&
        Objects.equals(this.loyaltyReferredCustomers, exportCustomerFilters.loyaltyReferredCustomers) &&
        Objects.equals(this.updatedAt, exportCustomerFilters.updatedAt) &&
        Objects.equals(this.phone, exportCustomerFilters.phone) &&
        Objects.equals(this.birthday, exportCustomerFilters.birthday) &&
        Objects.equals(this.metadata, exportCustomerFilters.metadata) &&
        Objects.equals(this.birthdate, exportCustomerFilters.birthdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(junction, name, id, description, email, sourceId, createdAt, addressCity, addressState, addressLine1, addressLine2, addressCountry, addressPostalCode, redemptionsTotalRedeemed, redemptionsTotalFailed, redemptionsTotalSucceeded, redemptionsTotalRolledBack, redemptionsTotalRollbackFailed, redemptionsTotalRollbackSucceeded, ordersTotalAmount, ordersTotalCount, ordersAverageAmount, ordersLastOrderAmount, ordersLastOrderDate, loyaltyPoints, loyaltyReferredCustomers, updatedAt, phone, birthday, metadata, birthdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportCustomerFilters {\n");
    sb.append("    junction: ").append(toIndentedString(junction)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    addressCity: ").append(toIndentedString(addressCity)).append("\n");
    sb.append("    addressState: ").append(toIndentedString(addressState)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressCountry: ").append(toIndentedString(addressCountry)).append("\n");
    sb.append("    addressPostalCode: ").append(toIndentedString(addressPostalCode)).append("\n");
    sb.append("    redemptionsTotalRedeemed: ").append(toIndentedString(redemptionsTotalRedeemed)).append("\n");
    sb.append("    redemptionsTotalFailed: ").append(toIndentedString(redemptionsTotalFailed)).append("\n");
    sb.append("    redemptionsTotalSucceeded: ").append(toIndentedString(redemptionsTotalSucceeded)).append("\n");
    sb.append("    redemptionsTotalRolledBack: ").append(toIndentedString(redemptionsTotalRolledBack)).append("\n");
    sb.append("    redemptionsTotalRollbackFailed: ").append(toIndentedString(redemptionsTotalRollbackFailed)).append("\n");
    sb.append("    redemptionsTotalRollbackSucceeded: ").append(toIndentedString(redemptionsTotalRollbackSucceeded)).append("\n");
    sb.append("    ordersTotalAmount: ").append(toIndentedString(ordersTotalAmount)).append("\n");
    sb.append("    ordersTotalCount: ").append(toIndentedString(ordersTotalCount)).append("\n");
    sb.append("    ordersAverageAmount: ").append(toIndentedString(ordersAverageAmount)).append("\n");
    sb.append("    ordersLastOrderAmount: ").append(toIndentedString(ordersLastOrderAmount)).append("\n");
    sb.append("    ordersLastOrderDate: ").append(toIndentedString(ordersLastOrderDate)).append("\n");
    sb.append("    loyaltyPoints: ").append(toIndentedString(loyaltyPoints)).append("\n");
    sb.append("    loyaltyReferredCustomers: ").append(toIndentedString(loyaltyReferredCustomers)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    birthdate: ").append(toIndentedString(birthdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("junction");
    openapiFields.add("name");
    openapiFields.add("id");
    openapiFields.add("description");
    openapiFields.add("email");
    openapiFields.add("source_id");
    openapiFields.add("created_at");
    openapiFields.add("address_city");
    openapiFields.add("address_state");
    openapiFields.add("address_line_1");
    openapiFields.add("address_line_2");
    openapiFields.add("address_country");
    openapiFields.add("address_postal_code");
    openapiFields.add("redemptions_total_redeemed");
    openapiFields.add("redemptions_total_failed");
    openapiFields.add("redemptions_total_succeeded");
    openapiFields.add("redemptions_total_rolled_back");
    openapiFields.add("redemptions_total_rollback_failed");
    openapiFields.add("redemptions_total_rollback_succeeded");
    openapiFields.add("orders_total_amount");
    openapiFields.add("orders_total_count");
    openapiFields.add("orders_average_amount");
    openapiFields.add("orders_last_order_amount");
    openapiFields.add("orders_last_order_date");
    openapiFields.add("loyalty_points");
    openapiFields.add("loyalty_referred_customers");
    openapiFields.add("updated_at");
    openapiFields.add("phone");
    openapiFields.add("birthday");
    openapiFields.add("metadata");
    openapiFields.add("birthdate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ExportCustomerFilters
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExportCustomerFilters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExportCustomerFilters is not found in the empty JSON string", ExportCustomerFilters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExportCustomerFilters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExportCustomerFilters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `email`
      if (jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("email"));
      }
      // validate the optional field `source_id`
      if (jsonObj.get("source_id") != null && !jsonObj.get("source_id").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("source_id"));
      }
      // validate the optional field `created_at`
      if (jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("created_at"));
      }
      // validate the optional field `address_city`
      if (jsonObj.get("address_city") != null && !jsonObj.get("address_city").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("address_city"));
      }
      // validate the optional field `address_state`
      if (jsonObj.get("address_state") != null && !jsonObj.get("address_state").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("address_state"));
      }
      // validate the optional field `address_line_1`
      if (jsonObj.get("address_line_1") != null && !jsonObj.get("address_line_1").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("address_line_1"));
      }
      // validate the optional field `address_line_2`
      if (jsonObj.get("address_line_2") != null && !jsonObj.get("address_line_2").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("address_line_2"));
      }
      // validate the optional field `address_country`
      if (jsonObj.get("address_country") != null && !jsonObj.get("address_country").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("address_country"));
      }
      // validate the optional field `address_postal_code`
      if (jsonObj.get("address_postal_code") != null && !jsonObj.get("address_postal_code").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("address_postal_code"));
      }
      // validate the optional field `redemptions_total_redeemed`
      if (jsonObj.get("redemptions_total_redeemed") != null && !jsonObj.get("redemptions_total_redeemed").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("redemptions_total_redeemed"));
      }
      // validate the optional field `redemptions_total_failed`
      if (jsonObj.get("redemptions_total_failed") != null && !jsonObj.get("redemptions_total_failed").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("redemptions_total_failed"));
      }
      // validate the optional field `redemptions_total_succeeded`
      if (jsonObj.get("redemptions_total_succeeded") != null && !jsonObj.get("redemptions_total_succeeded").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("redemptions_total_succeeded"));
      }
      // validate the optional field `redemptions_total_rolled_back`
      if (jsonObj.get("redemptions_total_rolled_back") != null && !jsonObj.get("redemptions_total_rolled_back").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("redemptions_total_rolled_back"));
      }
      // validate the optional field `redemptions_total_rollback_failed`
      if (jsonObj.get("redemptions_total_rollback_failed") != null && !jsonObj.get("redemptions_total_rollback_failed").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("redemptions_total_rollback_failed"));
      }
      // validate the optional field `redemptions_total_rollback_succeeded`
      if (jsonObj.get("redemptions_total_rollback_succeeded") != null && !jsonObj.get("redemptions_total_rollback_succeeded").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("redemptions_total_rollback_succeeded"));
      }
      // validate the optional field `orders_total_amount`
      if (jsonObj.get("orders_total_amount") != null && !jsonObj.get("orders_total_amount").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("orders_total_amount"));
      }
      // validate the optional field `orders_total_count`
      if (jsonObj.get("orders_total_count") != null && !jsonObj.get("orders_total_count").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("orders_total_count"));
      }
      // validate the optional field `orders_average_amount`
      if (jsonObj.get("orders_average_amount") != null && !jsonObj.get("orders_average_amount").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("orders_average_amount"));
      }
      // validate the optional field `orders_last_order_amount`
      if (jsonObj.get("orders_last_order_amount") != null && !jsonObj.get("orders_last_order_amount").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("orders_last_order_amount"));
      }
      // validate the optional field `orders_last_order_date`
      if (jsonObj.get("orders_last_order_date") != null && !jsonObj.get("orders_last_order_date").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("orders_last_order_date"));
      }
      // validate the optional field `loyalty_points`
      if (jsonObj.get("loyalty_points") != null && !jsonObj.get("loyalty_points").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("loyalty_points"));
      }
      // validate the optional field `loyalty_referred_customers`
      if (jsonObj.get("loyalty_referred_customers") != null && !jsonObj.get("loyalty_referred_customers").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("loyalty_referred_customers"));
      }
      // validate the optional field `updated_at`
      if (jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("updated_at"));
      }
      // validate the optional field `phone`
      if (jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("phone"));
      }
      // validate the optional field `birthday`
      if (jsonObj.get("birthday") != null && !jsonObj.get("birthday").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("birthday"));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("metadata"));
      }
      // validate the optional field `birthdate`
      if (jsonObj.get("birthdate") != null && !jsonObj.get("birthdate").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("birthdate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExportCustomerFilters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExportCustomerFilters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExportCustomerFilters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExportCustomerFilters.class));

       return (TypeAdapter<T>) new TypeAdapter<ExportCustomerFilters>() {
           @Override
           public void write(JsonWriter out, ExportCustomerFilters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExportCustomerFilters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ExportCustomerFilters given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ExportCustomerFilters
  * @throws IOException if the JSON string is invalid with respect to ExportCustomerFilters
  */
  public static ExportCustomerFilters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExportCustomerFilters.class);
  }

 /**
  * Convert an instance of ExportCustomerFilters to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

