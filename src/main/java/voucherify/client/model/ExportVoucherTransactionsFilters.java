/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import voucherify.client.model.FieldConditions;
import voucherify.client.model.Junction;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import voucherify.client.JSON;

/**
 * ExportVoucherTransactionsFilters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-17T09:00:53.208514+01:00[Europe/Warsaw]")
public class ExportVoucherTransactionsFilters {
  public static final String SERIALIZED_NAME_JUNCTION = "junction";
  @SerializedName(SERIALIZED_NAME_JUNCTION)
  private Junction junction;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private FieldConditions id;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaign_id";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private FieldConditions campaignId;

  public static final String SERIALIZED_NAME_VOUCHER_ID = "voucher_id";
  @SerializedName(SERIALIZED_NAME_VOUCHER_ID)
  private FieldConditions voucherId;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private FieldConditions type;

  public static final String SERIALIZED_NAME_SOURCE_ID = "source_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private FieldConditions sourceId;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private FieldConditions reason;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private FieldConditions source;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private FieldConditions balance;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private FieldConditions amount;

  public static final String SERIALIZED_NAME_RELATED_TRANSACTION_ID = "related_transaction_id";
  @SerializedName(SERIALIZED_NAME_RELATED_TRANSACTION_ID)
  private FieldConditions relatedTransactionId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private FieldConditions createdAt;

  public static final String SERIALIZED_NAME_DETAILS = "details";
  @SerializedName(SERIALIZED_NAME_DETAILS)
  private FieldConditions details;

  public ExportVoucherTransactionsFilters() {
  }

  public ExportVoucherTransactionsFilters junction(Junction junction) {
    
    this.junction = junction;
    return this;
  }

   /**
   * Get junction
   * @return junction
  **/
  @javax.annotation.Nullable
  public Junction getJunction() {
    return junction;
  }


  public void setJunction(Junction junction) {
    this.junction = junction;
  }


  public ExportVoucherTransactionsFilters id(FieldConditions id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public FieldConditions getId() {
    return id;
  }


  public void setId(FieldConditions id) {
    this.id = id;
  }


  public ExportVoucherTransactionsFilters campaignId(FieldConditions campaignId) {
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * Get campaignId
   * @return campaignId
  **/
  @javax.annotation.Nullable
  public FieldConditions getCampaignId() {
    return campaignId;
  }


  public void setCampaignId(FieldConditions campaignId) {
    this.campaignId = campaignId;
  }


  public ExportVoucherTransactionsFilters voucherId(FieldConditions voucherId) {
    
    this.voucherId = voucherId;
    return this;
  }

   /**
   * Get voucherId
   * @return voucherId
  **/
  @javax.annotation.Nullable
  public FieldConditions getVoucherId() {
    return voucherId;
  }


  public void setVoucherId(FieldConditions voucherId) {
    this.voucherId = voucherId;
  }


  public ExportVoucherTransactionsFilters type(FieldConditions type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  public FieldConditions getType() {
    return type;
  }


  public void setType(FieldConditions type) {
    this.type = type;
  }


  public ExportVoucherTransactionsFilters sourceId(FieldConditions sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * Get sourceId
   * @return sourceId
  **/
  @javax.annotation.Nullable
  public FieldConditions getSourceId() {
    return sourceId;
  }


  public void setSourceId(FieldConditions sourceId) {
    this.sourceId = sourceId;
  }


  public ExportVoucherTransactionsFilters reason(FieldConditions reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @javax.annotation.Nullable
  public FieldConditions getReason() {
    return reason;
  }


  public void setReason(FieldConditions reason) {
    this.reason = reason;
  }


  public ExportVoucherTransactionsFilters source(FieldConditions source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  public FieldConditions getSource() {
    return source;
  }


  public void setSource(FieldConditions source) {
    this.source = source;
  }


  public ExportVoucherTransactionsFilters balance(FieldConditions balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @javax.annotation.Nullable
  public FieldConditions getBalance() {
    return balance;
  }


  public void setBalance(FieldConditions balance) {
    this.balance = balance;
  }


  public ExportVoucherTransactionsFilters amount(FieldConditions amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  public FieldConditions getAmount() {
    return amount;
  }


  public void setAmount(FieldConditions amount) {
    this.amount = amount;
  }


  public ExportVoucherTransactionsFilters relatedTransactionId(FieldConditions relatedTransactionId) {
    
    this.relatedTransactionId = relatedTransactionId;
    return this;
  }

   /**
   * Get relatedTransactionId
   * @return relatedTransactionId
  **/
  @javax.annotation.Nullable
  public FieldConditions getRelatedTransactionId() {
    return relatedTransactionId;
  }


  public void setRelatedTransactionId(FieldConditions relatedTransactionId) {
    this.relatedTransactionId = relatedTransactionId;
  }


  public ExportVoucherTransactionsFilters createdAt(FieldConditions createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public FieldConditions getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(FieldConditions createdAt) {
    this.createdAt = createdAt;
  }


  public ExportVoucherTransactionsFilters details(FieldConditions details) {
    
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @javax.annotation.Nullable
  public FieldConditions getDetails() {
    return details;
  }


  public void setDetails(FieldConditions details) {
    this.details = details;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportVoucherTransactionsFilters exportVoucherTransactionsFilters = (ExportVoucherTransactionsFilters) o;
    return Objects.equals(this.junction, exportVoucherTransactionsFilters.junction) &&
        Objects.equals(this.id, exportVoucherTransactionsFilters.id) &&
        Objects.equals(this.campaignId, exportVoucherTransactionsFilters.campaignId) &&
        Objects.equals(this.voucherId, exportVoucherTransactionsFilters.voucherId) &&
        Objects.equals(this.type, exportVoucherTransactionsFilters.type) &&
        Objects.equals(this.sourceId, exportVoucherTransactionsFilters.sourceId) &&
        Objects.equals(this.reason, exportVoucherTransactionsFilters.reason) &&
        Objects.equals(this.source, exportVoucherTransactionsFilters.source) &&
        Objects.equals(this.balance, exportVoucherTransactionsFilters.balance) &&
        Objects.equals(this.amount, exportVoucherTransactionsFilters.amount) &&
        Objects.equals(this.relatedTransactionId, exportVoucherTransactionsFilters.relatedTransactionId) &&
        Objects.equals(this.createdAt, exportVoucherTransactionsFilters.createdAt) &&
        Objects.equals(this.details, exportVoucherTransactionsFilters.details);
  }

  @Override
  public int hashCode() {
    return Objects.hash(junction, id, campaignId, voucherId, type, sourceId, reason, source, balance, amount, relatedTransactionId, createdAt, details);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportVoucherTransactionsFilters {\n");
    sb.append("    junction: ").append(toIndentedString(junction)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    voucherId: ").append(toIndentedString(voucherId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    relatedTransactionId: ").append(toIndentedString(relatedTransactionId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("junction");
    openapiFields.add("id");
    openapiFields.add("campaign_id");
    openapiFields.add("voucher_id");
    openapiFields.add("type");
    openapiFields.add("source_id");
    openapiFields.add("reason");
    openapiFields.add("source");
    openapiFields.add("balance");
    openapiFields.add("amount");
    openapiFields.add("related_transaction_id");
    openapiFields.add("created_at");
    openapiFields.add("details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ExportVoucherTransactionsFilters
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ExportVoucherTransactionsFilters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ExportVoucherTransactionsFilters is not found in the empty JSON string", ExportVoucherTransactionsFilters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ExportVoucherTransactionsFilters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ExportVoucherTransactionsFilters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `campaign_id`
      if (jsonObj.get("campaign_id") != null && !jsonObj.get("campaign_id").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("campaign_id"));
      }
      // validate the optional field `voucher_id`
      if (jsonObj.get("voucher_id") != null && !jsonObj.get("voucher_id").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("voucher_id"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("type"));
      }
      // validate the optional field `source_id`
      if (jsonObj.get("source_id") != null && !jsonObj.get("source_id").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("source_id"));
      }
      // validate the optional field `reason`
      if (jsonObj.get("reason") != null && !jsonObj.get("reason").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("reason"));
      }
      // validate the optional field `source`
      if (jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("source"));
      }
      // validate the optional field `balance`
      if (jsonObj.get("balance") != null && !jsonObj.get("balance").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("balance"));
      }
      // validate the optional field `amount`
      if (jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("amount"));
      }
      // validate the optional field `related_transaction_id`
      if (jsonObj.get("related_transaction_id") != null && !jsonObj.get("related_transaction_id").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("related_transaction_id"));
      }
      // validate the optional field `created_at`
      if (jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("created_at"));
      }
      // validate the optional field `details`
      if (jsonObj.get("details") != null && !jsonObj.get("details").isJsonNull()) {
        FieldConditions.validateJsonElement(jsonObj.get("details"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ExportVoucherTransactionsFilters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ExportVoucherTransactionsFilters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ExportVoucherTransactionsFilters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ExportVoucherTransactionsFilters.class));

       return (TypeAdapter<T>) new TypeAdapter<ExportVoucherTransactionsFilters>() {
           @Override
           public void write(JsonWriter out, ExportVoucherTransactionsFilters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ExportVoucherTransactionsFilters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ExportVoucherTransactionsFilters given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ExportVoucherTransactionsFilters
  * @throws IOException if the JSON string is invalid with respect to ExportVoucherTransactionsFilters
  */
  public static ExportVoucherTransactionsFilters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ExportVoucherTransactionsFilters.class);
  }

 /**
  * Convert an instance of ExportVoucherTransactionsFilters to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

