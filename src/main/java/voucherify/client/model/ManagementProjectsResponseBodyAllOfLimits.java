/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import voucherify.client.model.ManagementProjectsResponseBodyAllOfLimitsApiCalls;
import voucherify.client.model.ManagementProjectsResponseBodyAllOfLimitsBulkApiCalls;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import voucherify.client.JSON;

/**
 * Determines additional limits set on a given project, e.g. the Sandbox project. If no limits are returned, the limits set for the whole organization apply.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ManagementProjectsResponseBodyAllOfLimits {
  public static final String SERIALIZED_NAME_API_CALLS = "api_calls";
  @SerializedName(SERIALIZED_NAME_API_CALLS)
  private List<ManagementProjectsResponseBodyAllOfLimitsApiCalls> apiCalls;

  public static final String SERIALIZED_NAME_BULK_API_CALLS = "bulk_api_calls";
  @SerializedName(SERIALIZED_NAME_BULK_API_CALLS)
  private List<ManagementProjectsResponseBodyAllOfLimitsBulkApiCalls> bulkApiCalls;

  public ManagementProjectsResponseBodyAllOfLimits() {
  }

  public ManagementProjectsResponseBodyAllOfLimits apiCalls(List<ManagementProjectsResponseBodyAllOfLimitsApiCalls> apiCalls) {
    
    this.apiCalls = apiCalls;
    return this;
  }

  public ManagementProjectsResponseBodyAllOfLimits addApiCallsItem(ManagementProjectsResponseBodyAllOfLimitsApiCalls apiCallsItem) {
    if (this.apiCalls == null) {
      this.apiCalls = new ArrayList<>();
    }
    this.apiCalls.add(apiCallsItem);
    return this;
  }

   /**
   * Get apiCalls
   * @return apiCalls
  **/
  @javax.annotation.Nullable
  public List<ManagementProjectsResponseBodyAllOfLimitsApiCalls> getApiCalls() {
    return apiCalls;
  }


  public void setApiCalls(List<ManagementProjectsResponseBodyAllOfLimitsApiCalls> apiCalls) {
    this.apiCalls = apiCalls;
  }


  public ManagementProjectsResponseBodyAllOfLimits bulkApiCalls(List<ManagementProjectsResponseBodyAllOfLimitsBulkApiCalls> bulkApiCalls) {
    
    this.bulkApiCalls = bulkApiCalls;
    return this;
  }

  public ManagementProjectsResponseBodyAllOfLimits addBulkApiCallsItem(ManagementProjectsResponseBodyAllOfLimitsBulkApiCalls bulkApiCallsItem) {
    if (this.bulkApiCalls == null) {
      this.bulkApiCalls = new ArrayList<>();
    }
    this.bulkApiCalls.add(bulkApiCallsItem);
    return this;
  }

   /**
   * Get bulkApiCalls
   * @return bulkApiCalls
  **/
  @javax.annotation.Nullable
  public List<ManagementProjectsResponseBodyAllOfLimitsBulkApiCalls> getBulkApiCalls() {
    return bulkApiCalls;
  }


  public void setBulkApiCalls(List<ManagementProjectsResponseBodyAllOfLimitsBulkApiCalls> bulkApiCalls) {
    this.bulkApiCalls = bulkApiCalls;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementProjectsResponseBodyAllOfLimits managementProjectsResponseBodyAllOfLimits = (ManagementProjectsResponseBodyAllOfLimits) o;
    return Objects.equals(this.apiCalls, managementProjectsResponseBodyAllOfLimits.apiCalls) &&
        Objects.equals(this.bulkApiCalls, managementProjectsResponseBodyAllOfLimits.bulkApiCalls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiCalls, bulkApiCalls);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementProjectsResponseBodyAllOfLimits {\n");
    sb.append("    apiCalls: ").append(toIndentedString(apiCalls)).append("\n");
    sb.append("    bulkApiCalls: ").append(toIndentedString(bulkApiCalls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("api_calls");
    openapiFields.add("bulk_api_calls");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ManagementProjectsResponseBodyAllOfLimits
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagementProjectsResponseBodyAllOfLimits.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagementProjectsResponseBodyAllOfLimits is not found in the empty JSON string", ManagementProjectsResponseBodyAllOfLimits.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ManagementProjectsResponseBodyAllOfLimits.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ManagementProjectsResponseBodyAllOfLimits` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("api_calls") != null && !jsonObj.get("api_calls").isJsonNull()) {
        JsonArray jsonArrayapiCalls = jsonObj.getAsJsonArray("api_calls");
        if (jsonArrayapiCalls != null) {
          // ensure the json data is an array
          if (!jsonObj.get("api_calls").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `api_calls` to be an array in the JSON string but got `%s`", jsonObj.get("api_calls").toString()));
          }

          // validate the optional field `api_calls` (array)
          for (int i = 0; i < jsonArrayapiCalls.size(); i++) {
            ManagementProjectsResponseBodyAllOfLimitsApiCalls.validateJsonElement(jsonArrayapiCalls.get(i));
          };
        }
      }
      if (jsonObj.get("bulk_api_calls") != null && !jsonObj.get("bulk_api_calls").isJsonNull()) {
        JsonArray jsonArraybulkApiCalls = jsonObj.getAsJsonArray("bulk_api_calls");
        if (jsonArraybulkApiCalls != null) {
          // ensure the json data is an array
          if (!jsonObj.get("bulk_api_calls").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `bulk_api_calls` to be an array in the JSON string but got `%s`", jsonObj.get("bulk_api_calls").toString()));
          }

          // validate the optional field `bulk_api_calls` (array)
          for (int i = 0; i < jsonArraybulkApiCalls.size(); i++) {
            ManagementProjectsResponseBodyAllOfLimitsBulkApiCalls.validateJsonElement(jsonArraybulkApiCalls.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagementProjectsResponseBodyAllOfLimits.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagementProjectsResponseBodyAllOfLimits' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagementProjectsResponseBodyAllOfLimits> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagementProjectsResponseBodyAllOfLimits.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagementProjectsResponseBodyAllOfLimits>() {
           @Override
           public void write(JsonWriter out, ManagementProjectsResponseBodyAllOfLimits value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagementProjectsResponseBodyAllOfLimits read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ManagementProjectsResponseBodyAllOfLimits given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ManagementProjectsResponseBodyAllOfLimits
  * @throws IOException if the JSON string is invalid with respect to ManagementProjectsResponseBodyAllOfLimits
  */
  public static ManagementProjectsResponseBodyAllOfLimits fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagementProjectsResponseBodyAllOfLimits.class);
  }

 /**
  * Convert an instance of ManagementProjectsResponseBodyAllOfLimits to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

