/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import voucherify.client.model.MetadataDefinitions;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import voucherify.client.JSON;

/**
 * 
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ManagementProjectsMetadataSchemaCreateRequestBody {
  public static final String SERIALIZED_NAME_RELATED_OBJECT = "related_object";
  @SerializedName(SERIALIZED_NAME_RELATED_OBJECT)
  private String relatedObject;

  public static final String SERIALIZED_NAME_ALLOW_DEFINED_ONLY = "allow_defined_only";
  @SerializedName(SERIALIZED_NAME_ALLOW_DEFINED_ONLY)
  private Boolean allowDefinedOnly = false;

  public ManagementProjectsMetadataSchemaCreateRequestBody() {
  }

  public ManagementProjectsMetadataSchemaCreateRequestBody relatedObject(String relatedObject) {
    
    this.relatedObject = relatedObject;
    return this;
  }

   /**
   * The resource type. You can define custom metadata schemas, which have a custom &#x60;\&quot;related_object\&quot;&#x60; resource type, or you can use standard resource types: &#x60;\&quot;campaign\&quot;&#x60;, &#x60;\&quot;customer\&quot;&#x60;, &#x60;\&quot;earning_rule\&quot;&#x60;, &#x60;\&quot;loyalty_tier\&quot;&#x60;, &#x60;\&quot;order\&quot;&#x60;, &#x60;\&quot;order_item\&quot;&#x60;, &#x60;\&quot;product\&quot;&#x60;, &#x60;\&quot;promotion_tier\&quot;&#x60;, &#x60;\&quot;publication\&quot;&#x60;, &#x60;\&quot;redemption\&quot;&#x60;, &#x60;\&quot;reward\&quot;&#x60;, &#x60;\&quot;voucher\&quot;&#x60;.
   * @return relatedObject
  **/
  @javax.annotation.Nonnull
  public String getRelatedObject() {
    return relatedObject;
  }


  public void setRelatedObject(String relatedObject) {
    this.relatedObject = relatedObject;
  }


  public ManagementProjectsMetadataSchemaCreateRequestBody allowDefinedOnly(Boolean allowDefinedOnly) {
    
    this.allowDefinedOnly = allowDefinedOnly;
    return this;
  }

   /**
   * Restricts the creation of metadata fields when set to &#x60;true&#x60;. In other words, it indicates whether or not you are allowed to create new metadata definitions; for example, in the campaign manager or publication manager. If it is set to true, then only the defined fields will be available for assigning values. 
   * @return allowDefinedOnly
  **/
  @javax.annotation.Nullable
  public Boolean getAllowDefinedOnly() {
    return allowDefinedOnly;
  }


  public void setAllowDefinedOnly(Boolean allowDefinedOnly) {
    this.allowDefinedOnly = allowDefinedOnly;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementProjectsMetadataSchemaCreateRequestBody managementProjectsMetadataSchemaCreateRequestBody = (ManagementProjectsMetadataSchemaCreateRequestBody) o;
    return Objects.equals(this.relatedObject, managementProjectsMetadataSchemaCreateRequestBody.relatedObject) &&
        Objects.equals(this.allowDefinedOnly, managementProjectsMetadataSchemaCreateRequestBody.allowDefinedOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(relatedObject, allowDefinedOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementProjectsMetadataSchemaCreateRequestBody {\n");
    sb.append("    relatedObject: ").append(toIndentedString(relatedObject)).append("\n");
    sb.append("    allowDefinedOnly: ").append(toIndentedString(allowDefinedOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("related_object");
    openapiFields.add("allow_defined_only");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("related_object");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ManagementProjectsMetadataSchemaCreateRequestBody
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ManagementProjectsMetadataSchemaCreateRequestBody.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ManagementProjectsMetadataSchemaCreateRequestBody is not found in the empty JSON string", ManagementProjectsMetadataSchemaCreateRequestBody.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ManagementProjectsMetadataSchemaCreateRequestBody.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ManagementProjectsMetadataSchemaCreateRequestBody` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ManagementProjectsMetadataSchemaCreateRequestBody.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("related_object").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `related_object` to be a primitive type in the JSON string but got `%s`", jsonObj.get("related_object").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagementProjectsMetadataSchemaCreateRequestBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagementProjectsMetadataSchemaCreateRequestBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagementProjectsMetadataSchemaCreateRequestBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagementProjectsMetadataSchemaCreateRequestBody.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagementProjectsMetadataSchemaCreateRequestBody>() {
           @Override
           public void write(JsonWriter out, ManagementProjectsMetadataSchemaCreateRequestBody value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagementProjectsMetadataSchemaCreateRequestBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ManagementProjectsMetadataSchemaCreateRequestBody given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ManagementProjectsMetadataSchemaCreateRequestBody
  * @throws IOException if the JSON string is invalid with respect to ManagementProjectsMetadataSchemaCreateRequestBody
  */
  public static ManagementProjectsMetadataSchemaCreateRequestBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagementProjectsMetadataSchemaCreateRequestBody.class);
  }

 /**
  * Convert an instance of ManagementProjectsMetadataSchemaCreateRequestBody to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

